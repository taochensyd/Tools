// const fs=require("fs"),moment=require("moment");exports.processData=(req,res)=>{const data=fs.readFileSync("D:\\2023_December.txt","utf8"),lines=data.split("\n"),results=[],grantedAccessResults=[],format="DD/MM/YYYY h:mm:ss A";for(const line of lines){const trimmedLine=line.trim();if(trimmedLine===""){continue;}const parts=trimmedLine.split(": "),originalDateTime=parts[0],hour=moment(originalDateTime,format).hour(),shiftDay=hour>=12?moment(originalDateTime,format).format("DD/MM/YYYY"):moment(originalDateTime,format).subtract(1,"days").format("DD/MM/YYYY"),shiftHour=moment(originalDateTime,format).format("HH");let accessType="Other";if(trimmedLine.includes("Access denied")){accessType="Access denied";}else if(trimmedLine.includes("Access granted")){accessType="Access granted";grantedAccessResults.push(trimmedLine);continue;}else if(trimmedLine.includes("changed property")){accessType="Changed property";}const door=trimmedLine.includes("Door")?trimmedLine.substring(trimmedLine.indexOf("Door"),trimmedLine.indexOf(" ",trimmedLine.indexOf("Door"))+3):"N/A";results.push({originalDateTime,hourGreaterThan12:hour>=12,shiftDay,shiftHour,accessType,door});}const filteredData=results.filter(item=>(item.accessType==="Access denied"&&!item.door.includes("40"))||!item.door.includes("41")||!item.door.includes("42")||!item.door.includes("43")||!item.door.includes("44")||!item.door.includes("45")||!item.door.includes("46")||!item.door.includes("47")||!item.door.includes("48")||!item.door.includes("49")),result=filteredData.reduce((acc,item)=>{if(!acc[item.shiftDay]){acc[item.shiftDay]={};}if(!acc[item.shiftDay][item.shiftHour]){acc[item.shiftDay][item.shiftHour]={count:0,doors:new Set()};}if(!acc[item.shiftDay][item.shiftHour].doors.has(item.door)){acc[item.shiftDay][item.shiftHour].count++;acc[item.shiftDay][item.shiftHour].doors.add(item.door);}return acc;},{}),resultArray=Object.keys(result).map((shiftDay,index)=>{const date=new Date(shiftDay.split("/").reverse().join("-")),dayOfWeek=date.getDay(),shifts=dayOfWeek===0||dayOfWeek===6?["20","21","22","23","00","01","02","03","04"]:["21","22","23","00","01","02","03","04"],weekType=dayOfWeek===0||dayOfWeek===6?"Weekend":"Weekday",dayNames=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayName=dayNames[dayOfWeek];let shiftCount=0;for(const shift of shifts){if(result[shiftDay]&&result[shiftDay].hasOwnProperty(shift)){shiftCount++;}}const missingShift=shifts.filter(shift=>!result[shiftDay].hasOwnProperty(shift));return{id:index+1,shiftDay,shiftCount,dayOfWeek:dayName,weekType,missingShift,missingShiftCount:missingShift.length,...Object.keys(result[shiftDay]).reduce((acc,shiftHour)=>{if(shiftHour!=="missingShift"){acc[shiftHour]=result[shiftDay][shiftHour].count;}return acc;},{}),underPerformance:[]};});for(const item of resultArray){for(const shiftHour in item){if(shiftHour!=="missingShift"&&shiftHour!=="underPerformance"&&shiftHour!=="shiftCount"&&shiftHour.length===2&&item[shiftHour]<7){item.underPerformance.push(shiftHour);}}}res.json(resultArray);};

// const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"];for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),c=moment(o,n).format("HH");let u="Other";if(s.includes("Access denied"))u="Access denied";else{if(s.includes("Access granted")){u="Access granted",r.push(s);continue}s.includes("changed property")&&(u="Changed property")}const l=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:c,accessType:u,door:l})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const c=t.filter((s=>!i[e].hasOwnProperty(s)));return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:c,missingShiftCount:c.length,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

// const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s))),l=c[e]?c[e].filter(e=>"Access granted"===e.accessType):[],m=l[0]?l[0].time:"N/A",h=l[l.length-1]?l[l.length-1].time:"N/A";return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,arriving:m,leaving:h,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&"arriving"!==s&&"leaving"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

// const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s))),l=c[e]?c[e].filter(e=>"Access granted"===e.accessType):[],m=l[0]?l[0].time:"N/A",h=l[l.length-1]?l[l.length-1].time:"N/A";return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,arriving:m,leaving:h,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&"arriving"!==s&&"leaving"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

// const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s))),l=c[e]?c[e].filter(e=>"Access granted"===e.accessType):[],m=l[0]?l[0].time:"N/A",h=l[l.length-1]?l[l.length-1].time:"N/A";return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,arriving:m,leaving:h,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&"arriving"!==s&&"leaving"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

// const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s))),l=c[e]?c[e].filter(e=>"Access granted"===e.accessType):[],m=l[0]?l[0].time:"N/A",h=l[l.length-1]?l[l.length-1].time:"N/A";return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,arriving:m,leaving:h,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&"arriving"!==s&&"leaving"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

//const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s))),l=c[e]?c[e].filter(e=>"Access granted"===e.accessType):[],m=l[0]?l[0].time:"N/A",h=l[l.length-1]?l[l.length-1].time:"N/A";return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,arriving:i>=12?m:h,leaving:i>=12?h:m,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&"arriving"!==s&&"leaving"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};

const fs=require("fs"),moment=require("moment");exports.processData=(e,s)=>{const o=fs.readFileSync("D:\\2023_December.txt","utf8").split("\n"),t=[],r=[],n="DD/MM/YYYY h:mm:ss A",a=["20","21","22","23","00","01","02","03","04"],c={};for(const e of o){const s=e.trim();if(""===s)continue;const o=s.split(": ")[0],i=moment(o,n).hour(),d=i>=12?moment(o,n).format("DD/MM/YYYY"):moment(o,n).subtract(1,"days").format("DD/MM/YYYY"),u=moment(o,n).format("HH");let l="Other";if(s.includes("Access denied"))l="Access denied";else{if(s.includes("Access granted")){l="Access granted",r.push(s),c[d]?c[d].push({time:u,accessType:l}):c[d]=[{time:u,accessType:l}];continue}s.includes("changed property")&&(l="Changed property")}const m=s.includes("Door")?s.substring(s.indexOf("Door"),s.indexOf(" ",s.indexOf("Door"))+3):"N/A";t.push({originalDateTime:o,hourGreaterThan12:i>=12,shiftDay:d,shiftHour:u,accessType:l,door:m})}const i=t.filter((e=>!(("Access denied"!==e.accessType||e.door.includes("40"))&&e.door.includes("41")&&e.door.includes("42")&&e.door.includes("43")&&e.door.includes("44")&&e.door.includes("45")&&e.door.includes("46")&&e.door.includes("47")&&e.door.includes("48")&&e.door.includes("49")))).reduce(((e,s)=>(e[s.shiftDay]||(e[s.shiftDay]={}),e[s.shiftDay][s.shiftHour]||(e[s.shiftDay][s.shiftHour]={count:0,doors:new Set}),e[s.shiftDay][s.shiftHour].doors.has(s.door)||(e[s.shiftDay][s.shiftHour].count++,e[s.shiftDay][s.shiftHour].doors.add(s.door)),e)),{}),d=Object.keys(i).map(((e,s)=>{const o=new Date(e.split("/").reverse().join("-")).getDay(),t=0===o||6===o?a:["21","22","23","00","01","02","03","04"],r=0===o||6===o?"Weekend":"Weekday",n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][o];let d=0;for(const s of t)i[e]&&i[e].hasOwnProperty(s)&&d++;const u=t.filter((s=>!i[e].hasOwnProperty(s)));return{id:s+1,shiftDay:e,shiftCount:d,dayOfWeek:n,weekType:r,missingShift:u,missingShiftCount:u.length,...Object.keys(i[e]).reduce(((s,o)=>("missingShift"!==o&&(s[o]=i[e][o].count),s)),{}),underPerformance:[]}}));for(const e of d)for(const s in e)"missingShift"!==s&&"underPerformance"!==s&&"shiftCount"!==s&&Number.isInteger(Number(s))&&e[s]<7&&a.includes(s)&&e.underPerformance.push(s);s.json(d)};
